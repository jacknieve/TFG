Cosas que faltan por probar:

Mas cosas que hacer:
-Empezar informe
-Seguir diseño
-En algun momento quizas añadir una clase de excepciones para salidas personalizadas?
-Probar con ngResource, a ver si así funciona bien cors

-Acordarse de añadir lo de JavaMail en la introduccion de la memoria
---->>>Algun dia tengo que ponerme a repasar todos los comentarios del codigo y a añadir o quitar, sobre todo si voy a meter algo fuera del alcance
-Orden de cosas-
(tengo que volver a probar el registro de ambos roles, para verificar que funciona bien)
Añadir validacion a los campos:
-A la contraseña en eliminar usuario
Añadir mensajes de error personalizados y opciones por defecto en los selects que haya que seleccionar.
Interfaz grafica
(Tambien una pequeña interfaz kk para añadir instituciones con la autentificacion de un admin)
->Mensaje error (clase) y ver en que casos se suelta la pagina de error <-
->Enlaces a secciones desde otras paginas <--
->Ocultar login y registro a los ya registrados <---
->Otra pagina incial para version logeado <----
->Ver que excepciones hay (añadir las que puse al cerrar en las demas) <-
->Cambiar casos de uso para ser menos restrictivos en las excepciones?
->Ver si podemos pasarle atributo al registro para que si da fallo, reenviar el atributo de vuelta <-----
->Añadir en todos los post, comprobaciones de que los datos son correctos
->Poner minimos y maximos a las fechas de nacimiento (para evitar error al convertirlo a edad (basicamente, poner de limite 10000 años o asi))
----Frontend----
->El header y el footer de login y registro el mismo que el de home sin loggear
->El header de perfil igual que el de principal (y los enlaces de arriba salen en función del rol)
->Popups
->Cambiar peticiones para traer ya todo?
->Añadir efectos a lo de abrir y cerrar
->Tal vez hacer un thread para enviar notificacion por correo?
->Footer
->Ver si se pueden comunicar los distintos controladores
->Añadir secciones para los mensajes de error
->Boton para recargar actualizacion de notificaciones (que solo aparezca en caso de error) (lo mismo en las otras secciones) y que oculte
los mensajes de error
->Los mensajes de error deben ocultarse al realizar otra accion.
->Cuando haga lo de puntuar, para evitar que salte el error durante la carga o al aceptar, si no se le pone una nota (y va a soltar error por ser -1, usar una variable local para pasar la nota)

>>Interfaces que faltan<<
-Mentorizado
-Mentor (terminar)
-Perfil
-Incio
-Inicio logeada
-Login
-Registro
-Logout

>>Funcionalidades en las que faltan analizar errores<<
-Mentorizaciones (mentor)
-Mentorizaciones (mentorizado)
-Peticiones
-Enviar peticion
-Cambiar fase
-Busqueda
-Cerrar relacion (mentor)
-Cerrar relacion (mentorizado)
-Perfil
-Puntuar mentorizacion
-Login?
-Registro?

Añadir errores y boton de recargar en js (cuando la busqueda da error)
Tambien devolver bien los responses, con codigos adecuados o con un mensaje ya desde el servidor en caso de no devolver nada de serie.


->Cambiar lo del registro para no usar angular para nada? (con un boton que vuelve a llamar al backend indicando que lo que se quiere es registrarse con el otro rol, por path variable por ejemplo (/{mentor}), haria falta otro pequeño form que mandase a una direccion, tal
vez pasada en el modelo (metodo post para distinguirlo del otro), y que el booleano de mentor lo cambiase ya el backend y lo fijase incialmente segun la eleccion inicial.


->Cambiar los casos de uso para que se adapten a lo que haga de cerrar relacion y puntuar
->Cambiar Long de puntuacion a int (pero controlar la comprobacion que se hace al recuperar las mentorizaciones sin puntuar, que se mira si es nulo)
->Cambiar la comprobacion de si esta vacio en el backend a ver cual es el codigo de respuesta (204)

contigopripo@gmail.com

(Cosas futuro)
->Lo de las consultas multiples en sql es transaction y comit, a ver si hay algo similar????
->Podriamos poner en el futuro de al borrar un usuario, eliminar algunos datos a null o pasarlo a otra tabla de usuarios borrados
->Añadir tambien en un futuro lo de recuperar una cuenta
->Añadir notificaciones para los usuarios 
->Añadir un script periodico para realizar limpieza de la base de datos
->Añadir algun atributo a la notificacion que sea del estilo el tipo, para que a un usuario no le lleguen muchas
->Añadir al nivel de estudios un entero para indicar una jerarquia y hacer busquedas por estudios minimos?
->Añadir log de los eventos para quitar todos los souts de las excepciones