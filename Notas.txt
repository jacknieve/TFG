Cosas que faltan por probar:

Mas cosas que hacer:
-Empezar informe
-Seguir diseño
-Empezar a programar de verdad
-En algun momento quizas añadir una clase de excepciones para salidas personalizadas?
-Para los formularios, todos los que se puedan, usar el modelo de thymeleaf (para los post)
es decir: enviar peticion, puntuar experiencia, registro...
-Probar con ngResource, a ver si así funciona bien cors

-Acordarse de añadir lo de JavaMail en la introduccion de la memoria
-Ver que le pasa a la descripcion en el registro, que no la pilla
-Ver lo de mostrar la fecha para modificarla
-Se podria hacer los de pasar de mentor/mentorizado a useraux para editar en el perfil

-Orden de cosas-
(tengo que volver a probar el registro de ambos roles, para verificar que funciona bien)
Cargar al comenzar las instituciones, areas de conocimiento y demas estatico
Acceder a una mentorizacion (mentor) (v)
Acceder a una mentorizacion (mentorizado) (v)
Cerrar una relacion (mentor) (s)
Cerrar una relacion (mentorizado) (s)
Puntuar una relacion (s)
Añadir validacion a los campos (d)
Añadir mensajes de error personalizados y opciones por defecto en los selects que haya que seleccionar. (d)
Borrar cuenta de usuario?
Interfaz grafica
(Tambien una pequeña interfaz kk para añadir instituciones con la autentificacion de un admin)

Para el perfilMentorMentorizacion, hacer uso de MentorPerfil dentro de otro objeto, lo mismo para mentorizado
Añadir errores y boton de recargar en js (cuando la busqueda da error)
Tambien faltan comprobaciones de enviar una solicitud o aceptar una solicitud de que el otro usuario este enable
Por otro lado, hay que tener en cuenta que si hago lo de borrar una cuenta, se deben de cerrar las peticiones, mentorizaciones,
y demas del usuario, pero, por si el usuario que accede al perfil mientras se borra
Y habria que hacer cosas para proteger de los doble-clicks-> Aplicar el ng-disable a todos los botones



